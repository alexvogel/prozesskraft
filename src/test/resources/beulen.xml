<?xml version="1.0" encoding="UTF-8"?>
<!-- <root> -->
<process name="beulen" version="0.2" description="Ermittelt die Beulsteifigkeit einer Struktur an einer bestimmten Stelle. Die Position wird mittels einer Knoten-ID definiert." architect="alexander.vogel@caegroup.de" path="irgendeinpath">
	<step name="root" type="automatic">
		<commit name="parameter" toroot="true">
			<variable key="matdb" value="no" minoccur="1" maxoccur="1" free="false" description="choose a centrally maintained material database or 'no' if material definitions are provided with abaqus includes" >
				<choice>no</choice>
				<choice>lin</choice>
				<choice>nlin</choice>
				<test name="matchPattern" description="testing if given value is one the possible choices.">
					<param id="1">no|lin|nlin</param>
				</test>
			</variable>
			<variable key="basename" minoccur="1" maxoccur="1" free="true" description="give it a name. 3-50 characters long. letters, figueres and '_'. no spaces.">
				<test name="matchPattern" description="testing if value is min 3 and max 50 characters long and only uses letters, figures and '_'">
					<param id="1">\w{3,50}</param>
				</test>
			</variable>
			<variable key="parttype" minoccur="1" maxoccur="1" free="false" description="which partype are you going to analyse?">
				<choice>fkl</choice>
				<choice>dach</choice>
				<choice>seite</choice>
				<test name="matchPattern" description="testing if given value is one the possible choices.">
					<param id="1">fkl|dach|seite</param>
				</test>
			</variable>
			<variable key="nid" minoccur="1" maxoccur="1" free="true" description="define position of stempel via node id.">
				<test name="matchPattern" description="testing if given value is an integer">
					<param id="1">\d+</param>
				</test>
			</variable>
			<variable key="area" minoccur="1" maxoccur="1" free="false" description="assessment area of node id. this links to the benchmarks.">
				<choice>area_1</choice>
				<choice>area_2</choice>
				<choice>area_3</choice>
				<test name="matchPattern" description="">
					<param id="1">area_[123456789]{1}</param>
				</test>
			</variable>
			<variable key="force" value="150" minoccur="1" maxoccur="1" free="true" description="test force">
				<choice>150</choice>
				<test name="matchPattern" description="tests whether given value is an integer">
					<param id="1">\d+</param>
				</test>
				<test name="moreThan" description="tests whether given value is min 100">
					<param id="1">99</param>
				</test>
				<test name="lessThan" description=" tests whether given value does not exceed 300">
					<param id="1">301</param>
				</test>
			</variable>
			<variable key="vmises" value="true" minoccur="0" maxoccur="1" free="false" description="if default postprocessing does not allow for a resultset 'vonMisesStrain' with this parameter set to 'true' the generation of this resultset will be forced.">
				<choice>true</choice>
				<choice>false</choice>
				<test name="matchPattern" description="">
					<param id="1">|true|false</param>
				</test>
			</variable>
			<variable key="plstrain" value="" minoccur="0" maxoccur="1" free="false" description="if default postprocessing does not allow for a resultset 'plasticStrain' with this parameter set to 'true' the generation of this resultset will be forced.">
				<choice>true</choice>
				<choice>false</choice>
				<test name="matchPattern" description="">
					<param id="1">|true|false</param>
				</test>
			</variable>
		</commit>
		<commit name="abaqus model" toroot="true">
			<file key="inc" minoccur="1" description="abaqus include file without history data" >
				<test name="doesExist" description="tests whether file does exist">
				</test>
				<test name="sizeGreaterThan" description="tests whether file size exceeds a min threshold">
					<param id="1">byte</param>
					<param id="2">1</param>
				</test>
			</file>
		</commit>
	</step>
	<step name="gen_abaqus_beulen" type="automatic" description="Die gesamte Prozesskette">
		<init fromobjecttype="file" name="template" listname="template_abadeck" returnfield="pathfilename" fromstep="root" insertrule="overwrite">
			<filter field="filename" pattern="beulen_abaqus_start.tt"/>
		</init>
		<init fromobjecttype="variable" name="nid" listname="template" returnfield="value" fromstep="root" insertrule="overlap">
			<filter field="name" pattern="nid"/>
		</init>
		<init fromobjecttype="variable" name="matdb" listname="matdb" returnfield="value" fromstep="root" insertrule="overwrite">
			<filter field="value" pattern="lin|nlin"/>
		</init>
		<work name="starte_prozesskette" description="irgendeine beschreibung" command="beulen.pl">
			<callitem sequence="1" val="list(script)"/>
			<callitem sequence="2" par="--nid" del="=" val="list(nid)"/>
			<callitem sequence="3" par="--template" del="=" val="list(template)"/>
			<callitem sequence="4" par="--mat" del="=" val="list(materialfile)"/>
			<callitem sequence="5" par="--inc" del="=" val="list(inc)"/>
			<callitem sequence="6" par="--matpw" del="=" val="list(matpassword)"/>
			<callitem sequence="7" par="--output" del="=" val="list(instancedir)/list(basename_beulanalyse_beulen)_list(nid).inp"/>
		</work>
		<commit name="name9" toroot="true">
			<variable key="plstrain" value="" minoccur="0" maxoccur="1" free="false">
				<choice>true</choice>
				<choice>false</choice>
				<test name="matchPattern" description="">
					<param id="1">|true|false</param>
				</test>
			</variable>
		</commit>
	</step>
</process>
<!-- </root> -->